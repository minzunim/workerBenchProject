<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" rel="stylesheet"
    integrity="sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC" crossorigin="anonymous">
    <link
    rel="stylesheet"
    href="https://cdn.jsdelivr.net/npm/bootstrap@4.5.3/dist/css/bootstrap.min.css"
    integrity="sha384-TX8t27EcRE3e/ihU7zmQxVncDAy5uIKz4rEkgIXeMed4M0jlfIDPvg6uqKI2xXr2"
    crossorigin="anonymous"/>
  <link
    href="//maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css"
    rel="stylesheet" />
  <script src="https://unpkg.com/axios/dist/axios.min.js"></script>
  <link href="/auth/css/password-change.css" rel="stylesheet"/>
  <title>비밀번호 재입력</title>
  </head>
  <body>
    <%- include('header.ejs') %>
      <div id="passwordBox">
          <h1>비밀번호 재입력</h1>
          <div class="mb-3">
            <label for="password" class="form-label">비밀번호 입력</label>
            <input type="text" class="form-control" id="password">
          </div>
          <div class="mb-3">
            <label for="checkPassword" class="form-label">비밀번호 재확인</label>
            <input type="checkPassword" class="form-control" id="checkPassword"></input>
          </div>
          <button type="button" id="changeBtn" onclick="submitPassword()">변경하기</button>
      </div>
  </body>

  <script>
    // 변경할 비밀번호를 제출
    const submitPassword = async () => {
      const password = document.querySelector("#password").value;
      const authentNum = document.querySelector("#checkPassword").value;

      if (password !== authentNum) {
        alert("패스워드가 일치하지 않습니다.");
        return;
      }
      if (password.length < 4 ) {
        alert("비밀번호가 너무 짧습니다.");
        return
      }

      try {
        const res = await axios({
          method: 'PATCH',
          url: '/api/auth/reset-password',
          data: { password, authentNum },
        })

        alert("비밀번호 변경이 완료되었습니다. 변경된 비밀번호로 재로그인 부탁드립니다.");
        location.href="/auth/login";
      } catch (err) {
        getErrorCode(
          err.response.data.statusCode,
          err.response.data.message,
          submitPassword,
        );
      }
    }

    // 에러 발생 시 상태 코드에 따른 로직 실행
    const getErrorCode = async (statusCode, errorMessage, callback) => {
      if (statusCode === 400) {
        alert(`에러 코드: ${statusCode} / message: ${errorMessage}`);
        return;
      }
      if (statusCode === 401) {
        const refreshRes = await requestAccessToken();
        if (!refreshRes) {
          alert('현재 로그인이 되어있지 않습니다. 로그인 후 이용 가능합니다.');
          location.href = '/auth/login';
        }
        callback();
      }
    };

    // access 토큰이 만료되었을 시 refresh 토큰으로 access 토큰 재발급을 요청
    const requestAccessToken = async () => {
      try {
        const res = await axios({
          method: 'GET',
          url: '/api/auth/refreshtoken/user',
        });
        return true;
      } catch (err) {
        return false;
      }
    };
  </script>
</html>
